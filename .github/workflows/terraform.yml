name: Deploy EC2 and DynamoDB with Terraform
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.3.0"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Debug AWS credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        shell: bash

      # Paso 1: Inicializar Terraform sin el backend para crear DynamoDB
      - name: Initialize Terraform (without backend)
        run: |
          terraform init -backend=false
          terraform apply -target=aws_dynamodb_table.terraform_state_lock -auto-approve

      # Paso 2: Reconfigurar el backend de S3 y DynamoDB
      - name: Initialize Terraform with backend
        run: |
          terraform init -reconfigure  # Reconfigura el backend

      # Paso 3: Validar y aplicar la infraestructura
      - name: Validate Terraform
        run: terraform validate

      - name: Plan Terraform (Crear EC2)
        run: terraform plan -var="instance_name=${{ secrets.INSTANCE_NAME }}"

      - name: Apply Terraform (Crear EC2)
        run: terraform apply -var="instance_name=${{ secrets.INSTANCE_NAME }}" -auto-approve

      - name: Output instance information
        run: terraform output